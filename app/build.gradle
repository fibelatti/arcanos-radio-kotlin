apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'de.mannodermaus.android-junit5'
apply plugin: 'com.getkeepsafe.dexcount'
apply from: 'coverage-report.gradle'

android {
    compileSdkVersion Versions.compileSdkVersion
    buildToolsVersion Versions.buildToolsVersion

    defaultConfig {
        applicationId AppInfo.applicationId
        versionCode AppInfo.versionCode
        versionName AppInfo.versionName
        minSdkVersion Versions.minSdkVersion
        targetSdkVersion Versions.targetSdkVersion

        resConfigs "en", "pt"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        buildConfigField "String", "API_URL", "\"https://api.arcanosmc.com.br\""
        buildConfigField "String", "API_APPLICATION_ID", "\"arcanosRadio\""
    }

    signingConfigs {
        debug {
            storeFile file("../keystore/debug.keystore")
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            resValue "string", "app_name", AppInfo.appName + " Dev"

            testCoverageEnabled = true

            minifyEnabled false
        }
        release {
            resValue "string", "app_name", AppInfo.appName

            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'

        test {
            java.srcDirs = ['src/sharedTest/kotlin', 'src/test/kotlin']
        }

        androidTest {
            java.srcDirs = ['src/sharedTest/kotlin', 'src/androidTest/kotlin']
            res.srcDirs += 'src/test/resources'
        }
    }

    testOptions {
        animationsDisabled true

        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }
}

preBuild.dependsOn ':ktlint'
preBuild.dependsOn ':detekt'

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation KotlinDependencies.kotlin

    // Support Library
    implementation SupportLibraryDependencies.supportLibrary
    implementation SupportLibraryDependencies.materialDesign
    implementation SupportLibraryDependencies.constraintLayout
    implementation SupportLibraryDependencies.media

    // DI
    implementation DIDependencies.dagger
    kapt DIDependencies.daggerCompiler

    // Rx
    implementation RxDependencies.rxJava
    implementation RxDependencies.rxAndroid

    // Network
    implementation NetworkDependencies.retrofit
    implementation NetworkDependencies.retrofitGsonConverter
    implementation NetworkDependencies.retrofitAdapter
    implementation NetworkDependencies.httpLoggingInterceptor
    implementation NetworkDependencies.stetho
    implementation NetworkDependencies.stethoOkHttp

    // Third Party
    implementation ThirdPartyDependencies.gson
    implementation ThirdPartyDependencies.picasso

    // Testing
    testImplementation TestDependencies.junit
    testImplementation TestDependencies.junit5
    testImplementation TestDependencies.junit5Params
    testImplementation TestDependencies.mockitoCore

    testRuntimeOnly TestDependencies.junit5Engine
    testRuntimeOnly TestDependencies.junitVintage

    androidTestImplementation TestDependencies.mockitoAndroid
    androidTestImplementation TestDependencies.supportAnnotations
    androidTestImplementation TestDependencies.testRunner
    androidTestImplementation TestDependencies.kotlinTest
}
